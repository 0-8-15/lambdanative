;; ssax module based on the public domain parser by Oleg Kiselyov

(define self #f)

(define ssax:warningmsg #f)
(define ssax:errormsg #f)

(define (xml->sxml str)
  (set! ssax:warningmsg #f)
  (set! ssax:errormsg #f)
  (let ((res (with-input-from-string str (lambda ()
    (SSAX:XML->SXML (current-input-port) '() )))))
  (if ssax:errormsg #f res)))

(include "common.sch")
(include "myenv.sch")
(include "input-parse.sch")
(include "http.sch")
(include "srfi-12.sch")
(include "htmlprag.sch")
(include "SSAX-code.sch")
(include "stx-engine.sch")
(include "lazy-xpath.sch")
(include "sxml-tools.sch")

(include "common.scm")
(include "myenv.scm")
(include "srfi-13-local.scm")
(include "util.scm")
(include "parse-error.scm")
(include "input-parse.scm")
(include "look-for-str.scm")
(include "char-encoding.scm")
(include "SSAX-code.scm")
(include "SXML-tree-trans.scm")
(include "sxpathlib.scm")
(include "srfi-12.scm")
(include "mime.scm")
(include "http.scm")
(include "access-remote.scm")
(include "id.scm")
(include "xlink-parser.scm")
(include "ssax-prim.scm")
(include "multi-parser.scm")
(include "htmlprag.scm")
(include "sxml-tools.scm")
(include "sxpath-ext.scm")
(include "xpath-parser.scm")
(include "txpath.scm")
(include "sxpath.scm")
(include "xpath-ast.scm")
(include "xpath-context.scm")
(include "xlink.scm")
(include "ddo-axes.scm")
(include "ddo-txpath.scm")
(include "lazy-xpath.scm")
(include "lazy-ssax.scm")
(include "modif.scm")
(include "serializer.scm")
(include "guides.scm")
(include "libmisc.scm")
(include "stx-engine.scm")

;; eof
